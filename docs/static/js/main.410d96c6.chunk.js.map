{"version":3,"sources":["components/AddCategories.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFecthGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAmCeA,EAhCO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAOlB,UACG,6BAAMD,IACN,uBACCQ,KAAM,OACNC,MAAST,EACTU,SAlBkB,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BR,EAAcQ,U,QCMxDG,EAXM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAG/B,OADAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAEnB,sBAAKG,UAAU,2DAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCNHO,EAAO,uCAAE,WAAQC,GAAR,uBAAAC,EAAA,6DAEZR,EAFY,iDAEoCS,UAAUF,GAF9C,gEAGEG,MAAMV,GAHR,cAGXW,EAHW,gBAIMA,EAAKC,OAJX,uBAITC,EAJS,EAITA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATzB,kBAaVc,GAbU,4CAAF,sDC6BLK,EA1BC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EAEZvB,mBAAS,CAC9B6B,KAAM,GACNO,SAAS,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAwBtC,OAjBAC,qBAAU,WACLjB,EAAQC,GACPiB,MAAM,SAAAC,GAEJC,YAAW,WAEPJ,EAAS,CACLT,KAAKY,EACLL,SAAQ,MAGb,UAGR,CAACb,IAGGc,EDnBwBM,CAAapB,GAAhCU,EAHgB,EAGrBJ,KAAaO,EAHQ,EAGRA,QAGpB,OACI,qCACI,oBAAIjB,UAAU,sDAAd,SAAqEI,IACpEa,GAAW,cAEZ,qBAAKjB,UAAU,YAAf,SAGOc,EAAOF,KAAI,SAAAC,GAAG,OACT,cAAE,EAAF,eAEIA,GADCA,EAAIlB,aEalB8B,EA9BM,WAAM,MAGa5C,mBAAS,CAAC,cAHvB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KAMvB,OACI,qCACI,8CACI,cAAC,EAAD,CAAeA,cAAeA,IAClC,uBAIA,6BAEM8C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YClB/BuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.410d96c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategories = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ({ target: { value } }) => setInputValue(value);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <h1>{ inputValue }</h1>\r\n           <input\r\n            type =\"text\"\r\n            value= { inputValue }\r\n            onChange= { handleInputChange }\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n   setCategories: PropTypes.func.isRequired \r\n};\r\n\r\nexport default AddCategories;\r\n","import React from 'react'\r\n\r\n const GifGridItem = ( {id, title, url} ) => {\r\n \r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","\r\n\r\nexport const getGifs= async ( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit =10&api_key=8ZAl9bfwWu7Q4z0rsNHSsFpmTpYk1HTT`\r\n     const resp = await fetch(url);\r\n     const { data } = await resp.json();\r\n     const gifs = data.map(img =>{\r\n         return {\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images?.downsized_medium.url\r\n         }\r\n     })\r\n\r\n     return gifs;\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFecthGifs } from \"../hooks/useFecthGifs\";\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    // const [Images, setImages] = useState([]);\r\n    const {data:images, loading }= useFecthGifs(category);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{category}</h3>\r\n            {loading && 'Cargando...'}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                 { images.map(img =>(\r\n                        < GifGridItem \r\n                        key={img.id}\r\n                        {...img} \r\n                        />\r\n                        ))} \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFecthGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n         data: [],\r\n         loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n         getGifs(category)\r\n         .then (imgs => {\r\n\r\n            setTimeout(() => {\r\n                \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n                \r\n            }, 3000);\r\n            \r\n         })\r\n    }, [category])    \r\n   \r\n     \r\n    return state;\r\n\r\n   \r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport AddCategories from \"./components/AddCategories\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon ball'];\r\n    const [categories, setCategories] = useState(['One Punch',]);\r\n    \r\n    \r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n                <AddCategories setCategories={setCategories} />\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                { \r\n                  categories.map( category => (\r\n                      <GifGrid\r\n                          key={category}\r\n                          category={category}\r\n                      />\r\n                  ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\nReactDOM.render( \n    <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}